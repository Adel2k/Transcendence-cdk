{
  "version": "45.0.0",
  "artifacts": {
    "vpc-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "vpc-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "vpc-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "vpc-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/2d55eb93a5d00776652d74dc3129a9f7a6912de2ad58677b080cc9abbddddabb.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "vpc-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "vpc-stack.assets"
      ],
      "metadata": {
        "/vpc-stack/Transendence-Create-Vpc": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "enableDnsHostnames": true,
              "enableDnsSupport": true,
              "ipAddresses": "*",
              "maxAzs": "*",
              "natGateways": "*",
              "restrictDefaultSecurityGroup": false,
              "subnetConfiguration": [
                {
                  "name": "*",
                  "subnetType": "Public",
                  "cidrMask": "*"
                },
                {
                  "name": "*",
                  "subnetType": "Isolated",
                  "cidrMask": "*"
                }
              ],
              "vpcName": "*"
            }
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcBFB51DCB"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet1Subnet88835247"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet1RouteTable975EE2F3"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet1RouteTableAssociationFE107BB9"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet1DefaultRoute8E332734"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet2SubnetB985F8DB"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet2RouteTableF0D45F46"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet2RouteTableAssociation9AED87F9"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPublicSubnet2DefaultRoute77675059"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPrivateSubnet1Subnet255914B9"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPrivateSubnet1RouteTableE1EDC685"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPrivateSubnet1RouteTableAssociation21866D0B"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPrivateSubnet2Subnet5C4BB641"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPrivateSubnet2RouteTable4B8E8F91"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcPrivateSubnet2RouteTableAssociation625D7F2B"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcIGWEA936A74"
          }
        ],
        "/vpc-stack/Transendence-Create-Vpc/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceCreateVpcVPCGW08591ADA"
          }
        ],
        "/vpc-stack/transendence-vpc-id": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/vpc-stack/transendence-vpc-id/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencevpcid80093447"
          }
        ],
        "/vpc-stack/transendence-public-subnet-1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/vpc-stack/transendence-public-subnet-1/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencepublicsubnet1579E5B95"
          }
        ],
        "/vpc-stack/transendence-public-subnet-2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/vpc-stack/transendence-public-subnet-2/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencepublicsubnet2F5D9C6AF"
          }
        ],
        "/vpc-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/vpc-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/vpc-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "vpc-stack"
    },
    "iam-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "iam-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "iam-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "iam-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/01898e0b59ee0098e4d7e9b5ed6485138556fa2c4e76759f0d86089739227f63.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "iam-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "iam-stack.assets"
      ],
      "metadata": {
        "/iam-stack/Transendence-Ecs-task-Ecs-tasks.amazonaws.com": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "description": "*",
              "roleName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addManagedPolicy": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addManagedPolicy": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          }
        ],
        "/iam-stack/Transendence-Ecs-task-Ecs-tasks.amazonaws.com/ImportTransendence-Ecs-task-Ecs-tasks.amazonaws.com": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/iam-stack/Transendence-Ecs-task-Ecs-tasks.amazonaws.com/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceEcstaskEcstasksamazonawscomB958EC96"
          }
        ],
        "/iam-stack/ecs-task-arn": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/iam-stack/ecs-task-arn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ecstaskarn0F88311A"
          }
        ],
        "/iam-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/iam-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/iam-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "iam-stack"
    },
    "security-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "security-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "security-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "security-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/69c8edb8bc7a4a38d5b274974697fccccff98fe11012f804067572eb29e61547.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "security-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "security-stack.assets"
      ],
      "metadata": {
        "/security-stack/Transendence-Transendence-Ecs-sg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/security-stack/ecs-sg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "allowAllOutbound": true,
              "description": "*",
              "securityGroupName": "*"
            }
          }
        ],
        "/security-stack/ecs-sg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ecssg0261AE9D"
          }
        ],
        "/security-stack/Transendence-Ecs-sg-Security-group": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/security-stack/Transendence-Ecs-sg-Security-group/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceEcssgSecuritygroup91BDB812"
          }
        ],
        "/security-stack/Transendence-Transendence-Db-sg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/security-stack/db-sg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "allowAllOutbound": true,
              "description": "*",
              "securityGroupName": "*"
            }
          }
        ],
        "/security-stack/db-sg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "dbsgCE6973BD"
          }
        ],
        "/security-stack/Transendence-Db-sg-Security-group": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/security-stack/Transendence-Db-sg-Security-group/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceDbsgSecuritygroup9EC27D79"
          }
        ],
        "/security-stack/Transendence-Transendence-Alb-sg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/security-stack/alb-sg": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "allowAllOutbound": true,
              "description": "*",
              "securityGroupName": "*"
            }
          }
        ],
        "/security-stack/alb-sg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "albsg40B076C4"
          }
        ],
        "/security-stack/Transendence-Alb-sg-Security-group": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/security-stack/Transendence-Alb-sg-Security-group/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceAlbsgSecuritygroup974AA5F1"
          }
        ],
        "/security-stack/Transendence-Transendence-Ec2-alb": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/security-stack/ec2-alb": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "allowAllOutbound": true,
              "description": "*",
              "securityGroupName": "*"
            }
          }
        ],
        "/security-stack/ec2-alb/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ec2alb5E674186"
          }
        ],
        "/security-stack/Transendence-Ec2-alb-Security-group": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/security-stack/Transendence-Ec2-alb-Security-group/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceEc2albSecuritygroup3C81E16E"
          }
        ],
        "/security-stack/SecurityGroupId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SecurityGroupId"
          }
        ],
        "/security-stack/DBSecurityGroupId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecurityGroupId"
          }
        ],
        "/security-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/security-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/security-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "security-stack"
    },
    "s3-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "s3-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "s3-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "s3-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/e8b7ff060955e94f9f7b6d79607977a0398b77cd357df4cf8f3be8552ce7dbb2.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "s3-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "s3-stack.assets"
      ],
      "metadata": {
        "/s3-stack/transendence-app-assets-Bucket": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "blockPublicAccess": "*",
              "bucketName": "*",
              "cors": [
                {
                  "allowedMethods": [
                    "GET",
                    "PUT"
                  ],
                  "allowedOrigins": "*",
                  "allowedHeaders": "*"
                }
              ],
              "encryption": "S3_MANAGED",
              "lifecycleRules": [
                {
                  "enabled": true,
                  "id": "*"
                }
              ],
              "removalPolicy": "destroy",
              "versioned": true
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addCorsRule": [
                {
                  "allowedMethods": [
                    "GET",
                    "PUT"
                  ],
                  "allowedOrigins": "*",
                  "allowedHeaders": "*"
                },
                "*",
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addLifecycleRule": [
                {
                  "enabled": true,
                  "id": "*"
                },
                "*",
                "*"
              ]
            }
          }
        ],
        "/s3-stack/transendence-app-assets-Bucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendenceappassetsBucketCA2EA8C9"
          }
        ],
        "/s3-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/s3-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/s3-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "s3-stack"
    },
    "ecs-cluster-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "ecs-cluster-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "ecs-cluster-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "ecs-cluster-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/2203c99929c91bad51d96925738000862b0965f52a93170d5b7dbd3fa1961f34.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "ecs-cluster-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "ecs-cluster-stack.assets"
      ],
      "metadata": {
        "/ecs-cluster-stack/Transendence-Transendence-Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-Transendence-Cluster/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-Transendence-Cluster/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-Transendence-Cluster/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-Transendence-Cluster/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "clusterName": "*",
              "vpc": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addCapacity": [
                "*",
                {
                  "maxCapacity": "*",
                  "minCapacity": "*",
                  "vpcSubnets": {
                    "subnetType": "Public"
                  },
                  "instanceType": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addAutoScalingGroup": [
                "*",
                {
                  "machineImageType": 0
                }
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateCluster90EBD3C0"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "machineImage": "*",
              "updateType": "Replace",
              "maxCapacity": "*",
              "minCapacity": "*",
              "vpcSubnets": {
                "subnetType": "Public"
              },
              "instanceType": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addUserData": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToRolePolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToRolePolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToRolePolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addSecurityGroup": [
                "*"
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceSecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "allowAllOutbound": true
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceSecurityGroupB01B6603"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "roleName": "*",
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceRole/ImportInstanceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRole1599DD52"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRoleDefaultPolicyEC44673F"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceProfile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceProfileC7BEB185"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LaunchTemplate": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "machineImage": "*",
              "instanceType": "*",
              "detailedMonitoring": false,
              "securityGroup": "*",
              "userData": "*",
              "associatePublicIpAddress": "*",
              "spotOptions": "*",
              "blockDevices": "*",
              "instanceProfile": "*",
              "keyPair": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addSecurityGroup": [
                "*"
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LaunchTemplate/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLaunchTemplate835AE5F4"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/ASG": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterASGE6EECA39"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "code": "*",
              "handler": "*",
              "runtime": "*",
              "timeout": "*",
              "environment": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEnvironment": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/ServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/ServiceRole/ImportServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRole35EB4013"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/ServiceRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRoleDefaultPolicyC99B0C4A"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunction23B3D6A5"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/LogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "logGroupName": "*"
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionLogGroup7D7E7BF9"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/AllowInvoke:ecsclusterstackTransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopicA3B92A56": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionAllowInvokeecsclusterstackTransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopicA3B92A564707CEB6"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/Topic": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "topic": "*",
              "endpoint": "*",
              "protocol": "lambda",
              "filterPolicy": "*",
              "filterPolicyWithMessageBody": "*",
              "region": "*",
              "deadLetterQueue": "*"
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/Topic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionTopicB6937B5A"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "autoScalingGroup": "*",
              "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
              "defaultResult": "CONTINUE",
              "notificationTarget": "*",
              "heartbeatTimeout": "*"
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Topic": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "masterKey": "*"
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Topic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopic10442DC0"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Role/ImportRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleF7EFE429"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Role/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Role/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleDefaultPolicyF08EA2F0"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHook14890454"
          }
        ],
        "/ecs-cluster-stack/SsmParameterValue:--transendence--ec2-alb--ecs--security-group-arn:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SsmParameterValuetransendenceec2albecssecuritygrouparnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "/ecs-cluster-stack/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "/ecs-cluster-stack/Transendence-Storecluster-Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/ecs-cluster-stack/Transendence-Storecluster-Cluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceStoreclusterCluster6A87ED7E"
          }
        ],
        "/ecs-cluster-stack/Transendence-cluster-Output-Cluster": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterOutputCluster"
          }
        ],
        "/ecs-cluster-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/ecs-cluster-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/ecs-cluster-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "ecs-cluster-stack"
    },
    "ecs-services-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "ecs-services-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "ecs-services-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "ecs-services-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/67750add33efc1f3d7b65b6ced2030aa0fffa1bf3f56b7b8d9dd7d608a2e56db.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "ecs-services-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "ecs-services-stack.assets"
      ],
      "metadata": {
        "/ecs-services-stack/Transendence-Backend-Services": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Backend-Services/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Backend-Services/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Backend-Services/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Backend-Services/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Backend-Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Backend-Task-role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/backendLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/backendLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "backendLogGroup09D90845"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdef": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterBackendTaskdef88A7160A"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdef/ExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "roleName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdef/ExecutionRole/ImportExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdef/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterBackendTaskdefExecutionRoleFD28F25C"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdef/ExecutionRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdef/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterBackendTaskdefExecutionRoleDefaultPolicy2F72F1A5"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Service": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 0% for a daemon service is used. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercentDaemon]",
            "trace": [
              "Annotations.addMessage (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1709)",
              "Annotations.addWarningV2 (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new Ec2Service2 (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/aws-ecs/lib/ec2/ec2-service.js:1:5909)",
              "new Ec2Service2 (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/tmp/tmpksntrt4z/lib/program.js:548:25)",
              "Kernel.create (/tmp/tmpksntrt4z/lib/program.js:218:93)",
              "KernelHost.processRequest (/tmp/tmpksntrt4z/lib/program.js:15467:36)",
              "KernelHost.run (/tmp/tmpksntrt4z/lib/program.js:15427:22)",
              "Immediate._onImmediate (/tmp/tmpksntrt4z/lib/program.js:15428:46)",
              "process.processImmediate (node:internal/timers:483:21)"
            ]
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterBackendService5375B797"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdefarn": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Taskdefarn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterBackendTaskdefarnC5FC0C00"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Servicearn": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Backend-Servicearn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterBackendServicearnB3AC9096"
          }
        ],
        "/ecs-services-stack/Transendence-Frontend-Services": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Frontend-Services/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Frontend-Services/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Frontend-Services/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Frontend-Services/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Frontend-Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-Frontend-Task-role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/frontendLogGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/frontendLogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "frontendLogGroupB0BC7A13"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdef": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterFrontendTaskdef4F1F27CD"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdef/ExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "roleName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdef/ExecutionRole/ImportExecutionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdef/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterFrontendTaskdefExecutionRole90900A08"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdef/ExecutionRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdef/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterFrontendTaskdefExecutionRoleDefaultPolicy1BF112DB"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Service": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 0% for a daemon service is used. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercentDaemon]",
            "trace": [
              "Annotations.addMessage (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1709)",
              "Annotations.addWarningV2 (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new Ec2Service2 (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/aws-ecs/lib/ec2/ec2-service.js:1:5909)",
              "new Ec2Service2 (/tmp/jsii-kernel-6pattc/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/tmp/tmpksntrt4z/lib/program.js:548:25)",
              "Kernel.create (/tmp/tmpksntrt4z/lib/program.js:218:93)",
              "KernelHost.processRequest (/tmp/tmpksntrt4z/lib/program.js:15467:36)",
              "KernelHost.run (/tmp/tmpksntrt4z/lib/program.js:15427:22)",
              "Immediate._onImmediate (/tmp/tmpksntrt4z/lib/program.js:15428:46)",
              "process.processImmediate (node:internal/timers:483:21)"
            ]
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterFrontendService09104377"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdefarn": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Taskdefarn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterFrontendTaskdefarnF8744790"
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Servicearn": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/ecs-services-stack/Transendence-cluster-Frontend-Servicearn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterFrontendServicearn1628EA14"
          }
        ],
        "/ecs-services-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/ecs-services-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/ecs-services-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "ecs-services-stack"
    },
    "acm-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "acm-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "acm-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "acm-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/f232c528df4eb04ecc0f1abce04c9e06f971354183f081ad7275b8c140a7cd27.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "acm-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "acm-stack.assets"
      ],
      "metadata": {
        "/acm-stack/transendence-dev-cert-transendence.dev.yospace.ai-Certificate": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "domainName": "*",
              "validation": "*"
            }
          }
        ],
        "/acm-stack/transendence-dev-cert-transendence.dev.yospace.ai-Certificate/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencedevcerttransendencedevyospaceaiCertificate866E2148"
          }
        ],
        "/acm-stack/transendence-dev-cert-transendence.dev.yospace.ai-CertArn": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/acm-stack/transendence-dev-cert-transendence.dev.yospace.ai-CertArn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencedevcerttransendencedevyospaceaiCertArn61158996"
          }
        ],
        "/acm-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/acm-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/acm-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "acm-stack"
    },
    "alb-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "alb-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "alb-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://577638398727/eu-west-2",
      "properties": {
        "templateFile": "alb-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-deploy-role-577638398727-eu-west-2",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-cfn-exec-role-577638398727-eu-west-2",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-577638398727-eu-west-2/0c06bcd57fb751c5549402b392534624a26aa7466a73a123aa3bb81ed189ddbe.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "alb-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::577638398727:role/cdk-hnb659fds-lookup-role-577638398727-eu-west-2",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "alb-stack.assets"
      ],
      "metadata": {
        "/alb-stack/transendence-alb-VpcImported": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-alb-VpcImported/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-alb-VpcImported/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-alb-VpcImported/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-alb-VpcImported/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-albClusterImported": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/alb-stack/SsmParameterValue:--transendence-cluster--frontend--ecs--service-arn:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SsmParameterValuetransendenceclusterfrontendecsservicearnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "/alb-stack/SsmParameterValue:--transendence-cluster--backend--ecs--service-arn:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SsmParameterValuetransendenceclusterbackendecsservicearnC96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "/alb-stack/transendence-alb": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-alb/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbA0DD9043"
          }
        ],
        "/alb-stack/transendence-alb/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "vpc": "*",
              "description": "*",
              "allowAllOutbound": false
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                {
                  "canInlineRule": true,
                  "connections": "*",
                  "uniqueId": "*"
                },
                {},
                "*",
                false
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addIngressRule": [
                {
                  "canInlineRule": true,
                  "connections": "*",
                  "uniqueId": "*"
                },
                {},
                "*",
                false
              ]
            }
          }
        ],
        "/alb-stack/transendence-alb/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbSecurityGroup931419BD"
          }
        ],
        "/alb-stack/transendence-alb/transendence-alb-HttpRedirectListener": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-alb/transendence-alb-HttpRedirectListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbtransendencealbHttpRedirectListener421D15F2"
          }
        ],
        "/alb-stack/transendence-alb/http-3788": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/alb-stack/transendence-alb/http-3788/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbhttp378825CC3275"
          }
        ],
        "/alb-stack/transendence-alb/http-3788/ApiRouteRule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbhttp3788ApiRouteRule4C17D6D9"
          }
        ],
        "/alb-stack/transendence-alb/http-3788/AvatarsRouteRule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbhttp3788AvatarsRouteRule930B2038"
          }
        ],
        "/alb-stack/transendence-alb/http-3788/DefaultRouteRule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbhttp3788DefaultRouteRule9804CDFC"
          }
        ],
        "/alb-stack/transendence-alb-frontend-TG/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbfrontendTGA6A52B9A"
          }
        ],
        "/alb-stack/transendence-alb-backend-TG/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbbackendTG5A613075"
          }
        ],
        "/alb-stack/Transendence-cluster-Transendence-alb-Certparam.Parameter": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TransendenceclusterTransendencealbCertparamParameter"
          }
        ],
        "/alb-stack/transendence-albEndpoint": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "parameterName": "*",
              "stringValue": "*"
            }
          }
        ],
        "/alb-stack/transendence-albEndpoint/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendencealbEndpointB4946DD4"
          }
        ],
        "/alb-stack/transendenceAliasRecord": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zone": "*",
              "recordName": "*",
              "target": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zone": "*",
              "recordName": "*",
              "target": "*"
            }
          }
        ],
        "/alb-stack/transendenceAliasRecord/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "transendenceAliasRecord8A8741E6"
          }
        ],
        "/alb-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/alb-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/alb-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "alb-stack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name"
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD"
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path"
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default"
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs"
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies"
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite"
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK"
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently"
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default."
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`."
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default."
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy"
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model."
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis."
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy"
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role"
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1020.2"
}