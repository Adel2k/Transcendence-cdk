{
 "Resources": {
  "TransendenceclusterCreateCluster90EBD3C0": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "transendence-cluster"
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceSecurityGroupB01B6603": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ],
    "VpcId": "vpc-0e3c4903be8871e4d"
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceSecurityGroup/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRole1599DD52": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceRole/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRoleDefaultPolicyEC44673F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecs:DeregisterContainerInstance",
        "ecs:RegisterContainerInstance",
        "ecs:Submit*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TransendenceclusterCreateCluster90EBD3C0",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecs:Poll",
        "ecs:StartTelemetrySession"
       ],
       "Condition": {
        "ArnEquals": {
         "ecs:cluster": {
          "Fn::GetAtt": [
           "TransendenceclusterCreateCluster90EBD3C0",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:GetAuthorizationToken",
        "ecs:DiscoverPollEndpoint",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRoleDefaultPolicyEC44673F",
    "Roles": [
     {
      "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRole1599DD52"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceRole/DefaultPolicy/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceProfileC7BEB185": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRole1599DD52"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/InstanceProfile"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLaunchTemplate835AE5F4": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "IamInstanceProfile": {
      "Arn": {
       "Fn::GetAtt": [
        "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceProfileC7BEB185",
        "Arn"
       ]
      }
     },
     "ImageId": {
      "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
     },
     "InstanceType": "t3.small",
     "Monitoring": {
      "Enabled": false
     },
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceSecurityGroupB01B6603",
        "GroupId"
       ]
      },
      {
       "Ref": "SsmParameterValuetransendenceec2albecssecuritygrouparnC96584B6F00A464EAD1953AFF4B05118Parameter"
      }
     ],
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LaunchTemplate"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LaunchTemplate"
        }
       ]
      }
     ],
     "UserData": {
      "Fn::Base64": {
       "Fn::Join": [
        "",
        [
         "#!/bin/bash\necho ECS_CLUSTER=",
         {
          "Ref": "TransendenceclusterCreateCluster90EBD3C0"
         },
         " >> /etc/ecs/ecs.config"
        ]
       ]
      }
     }
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LaunchTemplate"
       }
      ]
     }
    ]
   },
   "DependsOn": [
    "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRoleDefaultPolicyEC44673F",
    "TransendenceclusterCreateClusterTransendenceAddcapacityClusterInstanceRole1599DD52"
   ],
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LaunchTemplate/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterASGE6EECA39": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "LaunchTemplate": {
     "LaunchTemplateId": {
      "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLaunchTemplate835AE5F4"
     },
     "Version": {
      "Fn::GetAtt": [
       "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLaunchTemplate835AE5F4",
       "LatestVersionNumber"
      ]
     }
    },
    "MaxSize": "2",
    "MinSize": "1",
    "Tags": [
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ],
    "VPCZoneIdentifier": [
     "subnet-006d0fad5eb95e023",
     "subnet-0c9f39b53c5f7d40b"
    ]
   },
   "UpdatePolicy": {
    "AutoScalingReplacingUpdate": {
     "WillReplace": true
    },
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/ASG"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRole35EB4013": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/ServiceRole/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRoleDefaultPolicyC99B0C4A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeHosts",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstances"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "autoscaling:CompleteLifecycleAction",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:autoscaling:eu-west-2:577638398727:autoScalingGroup:*:autoScalingGroupName/",
          {
           "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterASGE6EECA39"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "ecs:DescribeContainerInstances",
        "ecs:DescribeTasks",
        "ecs:ListTasks",
        "ecs:UpdateContainerInstancesState"
       ],
       "Condition": {
        "ArnEquals": {
         "ecs:cluster": {
          "Fn::GetAtt": [
           "TransendenceclusterCreateCluster90EBD3C0",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecs:ListContainerInstances",
        "ecs:SubmitContainerStateChange",
        "ecs:SubmitTaskStateChange"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TransendenceclusterCreateCluster90EBD3C0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRoleDefaultPolicyC99B0C4A",
    "Roles": [
     {
      "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRole35EB4013"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunction23B3D6A5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(dict(event, ResponseURL='...')))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n\n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \"\"\"Fetch tasks for a container instance ARN.\"\"\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n\n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n\n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
    },
    "Environment": {
     "Variables": {
      "CLUSTER": {
       "Ref": "TransendenceclusterCreateCluster90EBD3C0"
      }
     }
    },
    "Handler": "index.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRole35EB4013",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ],
    "Timeout": 310
   },
   "DependsOn": [
    "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRoleDefaultPolicyC99B0C4A",
    "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionServiceRole35EB4013"
   ],
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionLogGroup7D7E7BF9": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunction23B3D6A5"
       }
      ]
     ]
    },
    "RetentionInDays": 731,
    "Tags": [
     {
      "Key": "Name",
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/LogGroup/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionAllowInvokeecsclusterstackTransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopicA3B92A564707CEB6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunction23B3D6A5",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopic10442DC0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/AllowInvoke:ecsclusterstackTransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopicA3B92A56"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunctionTopicB6937B5A": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "TransendenceclusterCreateClusterTransendenceAddcapacityClusterDrainECSHookFunction23B3D6A5",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopic10442DC0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/DrainECSHook/Function/Topic/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopic10442DC0": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Topic/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleF7EFE429": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "autoscaling.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Role/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleDefaultPolicyF08EA2F0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopic10442DC0"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleDefaultPolicyF08EA2F0",
    "Roles": [
     {
      "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleF7EFE429"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Role/DefaultPolicy/Resource"
   }
  },
  "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHook14890454": {
   "Type": "AWS::AutoScaling::LifecycleHook",
   "Properties": {
    "AutoScalingGroupName": {
     "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterASGE6EECA39"
    },
    "DefaultResult": "CONTINUE",
    "HeartbeatTimeout": 300,
    "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
    "NotificationTargetARN": {
     "Ref": "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookTopic10442DC0"
    },
    "RoleARN": {
     "Fn::GetAtt": [
      "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleF7EFE429",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleDefaultPolicyF08EA2F0",
    "TransendenceclusterCreateClusterTransendenceAddcapacityClusterLifecycleHookDrainHookRoleF7EFE429"
   ],
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-cluster-Create-Cluster/Transendence-Addcapacity-Cluster/LifecycleHookDrainHook/Resource"
   }
  },
  "TransendenceStoreclusterCluster6A87ED7E": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/transendence/ecs/cluster",
    "Type": "String",
    "Value": {
     "Ref": "TransendenceclusterCreateCluster90EBD3C0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/Transendence-Storecluster-Cluster/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/81WTW/jNhD9LctjwKipF+jBN6/X3RpNHNfWtgcjCMbk2GZNkQI5TCoI+u8F9RUpboNigUV6MEwN5+sNn544SSY3PyU3H+DZXwt5vtZqn5RbAnHmG/Q2OIE7dsX4G78HDs/+sUThk3Kugyd0u5KJZrWCDNm09nzKRb2qeMlAyjnkIBQVbFoXKFkGf73Y6ohMmVeWp1xsw94geTYtma+XaZHHEuuw10qwijNlPIER2G5cseqhrTkLZLcCtDLHL86GfFBbnJTBZQbHNuymeqge+PxgWkgVh0DWN8FJ+TrTruzx8VG21hRyCdR1tMFcg8Da87thbhB/9eg+A0GDtJtDajdW49pqJeL8y+rbN7YoglNUDObZDu71iPitOqAohMZfrD3vSgYXp1Hj1Z1b6sB4RcoaNmWD6U8X88njcrVNZ6v54jFdbO6Wq1m6XH1hnEk8QNC0QR80sSmb36/S5errgnFmLKmDEhATpuCOSG3BE4KjPQKlKkMbqOVMxDBqueIoJkk5Qjw6d9DaPs+0vg+0t8FINiUXsMk0iuK3EIw4pZjlGgh35T9R5uJIIzoCpVHeWaPIOmWObHoA7ZEzPz6HhnT94TfteW+FAsKGNst8JqVD79ttn1u6z+N0OsteW3H+jE9KoH/V1NrZg9JdX2cs1qDckHj/zosx9ooryJIysmtXMmc1DiQDvA8Zyk9FZH7ulBEqBz0TwgZDI58YPxMtV65Y1dN23UVdcJcIxGlptDIvvO7fkTc338779u43I4piYeCIsk6p4onUvHmxFTNnxnr3/4P/LqP7btOo+Ryr8cbefk2agEYyL/JcmqXcEhBmaMiPtfW/mt+p7Ps0WQ+9mXdcLceKVHEN2V5CUv4cTM2BeBmxspOUExip0bVPLhhSvdzQQP85Q/OknDWx9FDYFkNzdzdqu+pK1h2iy5T3ypqKa3v0SXlr+7uCbpe91rXS2Jor7o1Pym3Ye+FU3qIgmyvRNydzq3re586SFVazKWvgM84OShO6jrC129D0h6LTHXoPR/xkZefh8Ni9NvFzA/IWidD9FjAMGx12xtPYV61F8aL0KxYDx3qv4t5n8VoZv1hrcJBhc0nMu/VA833t9TvoUcE+qqpGj/HhPlAeqOLrgk7W/PAx+XGSfPzwp1fquj3fZNP8/w2QvaR57goAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ecs-cluster-stack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "SsmParameterValuetransendenceec2albecssecuritygrouparnC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/transendence/ec2-alb/ecs/security-group-arn"
  },
  "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "TransendenceclusterOutputCluster": {
   "Value": {
    "Ref": "TransendenceclusterCreateCluster90EBD3C0"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}