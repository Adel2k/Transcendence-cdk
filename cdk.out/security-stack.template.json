{
 "Parameters": {
  "SsmParameterValuetransendencevpcidtransendenceC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/transendence/vpc-id/transendence"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "lambdasg93781054": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "SG for Lambda Functions",
    "GroupName": "tmp-lambda-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "SsmParameterValuetransendencevpcidtransendenceC96584B6F00A464EAD1953AFF4B05118Parameter"
    }
   },
   "Metadata": {
    "aws:cdk:path": "security-stack/lambda-sg/Resource"
   }
  },
  "bastionsg9F6FB053": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "SG for Bastion Host",
    "GroupName": "tmp-bastion-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "SSH Access",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "SsmParameterValuetransendencevpcidtransendenceC96584B6F00A464EAD1953AFF4B05118Parameter"
    }
   },
   "Metadata": {
    "aws:cdk:path": "security-stack/bastion-sg/Resource"
   }
  },
  "ecssg0261AE9D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "SG for ECS",
    "GroupName": "tmp-ecs-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "SsmParameterValuetransendencevpcidtransendenceC96584B6F00A464EAD1953AFF4B05118Parameter"
    }
   },
   "Metadata": {
    "aws:cdk:path": "security-stack/ecs-sg/Resource"
   }
  },
  "dbsgCE6973BD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "SG for RDS",
    "GroupName": "tmp-db-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "SsmParameterValuetransendencevpcidtransendenceC96584B6F00A464EAD1953AFF4B05118Parameter"
    }
   },
   "Metadata": {
    "aws:cdk:path": "security-stack/db-sg/Resource"
   }
  },
  "dbsgfromsecuritystackecssgDE676D7C5432B8B5AC88": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "PostgreSQL from ECS",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "dbsgCE6973BD",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ecssg0261AE9D",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "security-stack/db-sg/from securitystackecssgDE676D7C:5432"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/7WRQU/DMAyFf8tyRGkY3a03xAH1wqbuWE0oSwyEpU5JbKqp6n9HXQsq4joOlqXnp0+2X67yda7WK92lzNhT5t1R9XvS5iQfXnCno26AIMoKUuBooBY3Qi7qIHWXnsHkqt+D4ejo/BgDt3UvPlsjiotNex+6e++3TMfAaEVBkUEKC8lE15ILODvTkvGkG7jog7w2TVtb4muElCr2IIq6F0Zjid4hTMrENAERzIhMM5PRfTCU9hs1/Hzi+lv+882jf7n/YYz8V4p/hBkwjIMtU8s0yN2Z3gLebtRdrjar9+RcFhnJNaCqqX8BsqPlN2UCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "security-stack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "SecurityGroupId": {
   "Value": {
    "Fn::GetAtt": [
     "ecssg0261AE9D",
     "GroupId"
    ]
   }
  },
  "DBSecurityGroupId": {
   "Value": {
    "Fn::GetAtt": [
     "dbsgCE6973BD",
     "GroupId"
    ]
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}